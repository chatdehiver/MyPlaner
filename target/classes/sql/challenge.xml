<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="challenge-mapper">
	<resultMap type="ChallengeLog" id="challengeLogMap">
		<result property="challengeNo" column="challenge_No" />
		<result property="challengeLogContent"
			column="challenge_log_content" />
		<result property="dayCount" column="day_count" />
	</resultMap>

	<resultMap type="ChallengeComment" id="challengeCommentMap">
		<result property="challengeNo" column="challenge_No" />
		<result property="challengeCommentNo"
			column="challenge_comment_no" />
		<result property="challengeReplyComment"
			column="challenge_reply_comment" />
		<result property="challengeCommentMemberNo"
			column="challenge_comment_member_No" />
		<result property="challengeComment" column="challenge_comment" />
		<result property="challengeCommentWriteDate"
			column="challenge_comment_write_date" />
	</resultMap>

	<resultMap type="ChallengeContent" id="challengeContentMap">
		<result property="challengeNo" column="challenge_No" />
		<result property="challengeContent" column="challenge_Content"/>
		<result property="challengeContentCheck" column="challenge_Content_Check"/>
		<result property="challengeStartDate" column="challenge_start_date" />
	</resultMap>
	
	<resultMap type="Challenge" id="challengeListMap">
		<result property="challengeNo" column="challenge_No" />
		<result property="challengeTitle" column="challenge_Title" />
		<result property="challengeStartDate"
			column="challenge_Start_Date" />
		<result property="challengeEndDate" column="challenge_End_Date" />
		<result property="memberNo" column="member_No" />
		<result property="challengeCategory"
			column="challenge_Category" />
		<result property="challengeLikes" column="challenge_Likes" />
		<result property="challengeSharing" column="challenge_Sharing" />
		<collection property="challengeLogList"
			resultMap="challengeLogMap" />
		<collection property="challengeCommentList"
			resultMap="challengeCommentMap" />
		<collection property="challengeContentList"
			resultMap="challengeContentMap" />
	</resultMap>

	<resultMap type="Challenge" id="challengeSelectMap">
		<result property="challengeNo" column="challenge_no" />
		<result property="challengeTitle" column="challenge_title" />
		<result property="challengeStartDate"
			column="challenge_start_date" />
		<result property="challengeEndDate" column="challenge_end_date" />
		<result property="memberNo" column="member_no" />
		<result property="challengeCategory"
			column="challenge_category" />
		<result property="challengeLikes" column="challenge_likes" />
		<result property="challengeSharing" column="challenge_sharing" />
	</resultMap>

	<insert id="addChallenge" parameterType="Challenge">
		<selectKey keyProperty="challengeNo" resultType="int"
			order="BEFORE">
			select
			challenge_seq.nextval from dual
		</selectKey>
		insert into Challenge(challenge_No, challenge_Title,
		challenge_Start_Date, challenge_End_Date, member_No,
		challenge_Category, challenge_Likes, challenge_Sharing)
		values(#{challengeNo}, #{challengeTitle},
		TO_DATE(#{challengeStartDate},'YYYYMMDD'),
		TO_DATE(#{challengeEndDate},'YYYYMMDD'), #{memberNo},
		#{challengeCategory}, #{challengeLikes}, #{challengeSharing} )
	</insert>

	<insert id="addChallengeContent" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index"
			open="INSERT ALL " separator=" " close="SELECT * FROM DUAL">
			into Challenge_Content(challenge_no,
			challenge_content,challenge_content_check)
			values(
			#{item.challengeNo},
			#{item.challengeContent},#{item.challengeContentCheck})
		</foreach>
	</insert>

	<delete id="deleteChallengeContent" parameterType="String">
		delete from
		Challenge_Content where challenge_Content=#{value}
	</delete>

	<delete id="deleteChallenge" parameterType="int">
		delete from Challenge
		where challenge_no=#{value}
	</delete>

	<insert id="writeChallengeComment"
		parameterType="ChallengeComment">
		<selectKey keyProperty="challengeCommentNo" resultType="int"
			order="BEFORE">
			select
			challenge_comment_seq.nextval from dual
		</selectKey>
		insert into
		Challenge_comment(challenge_comment_no,challenge_reply_comment,challenge_no,challenge_comment_member_no,challenge_comment,challenge_comment_write_date)
		values(#{challengeCommentNo}, #{challengeReplyComment},
		#{challengeNo}, #{challengeCommentMemberNo}, #{challengeComment},
		sysdate)
	</insert>

	<delete id="deleteChallengeComment"
		parameterType="ChallengeComment">
		delete from challenge_comment where
		challenge_comment_no=#{challengeCommentNo} OR
		challenge_reply_comment=#{challengeReplyComment}
	</delete>

	<update id="checkChallenge" parameterType="ChallengeContent">
		update
		challenge_content set challenge_Content_Check=#{challengeContentCheck}
		where challenge_No=#{challengeNo} AND challenge_content =
		#{challengeContent}
	</update>

	<select id="getAllChallengeList" resultMap="challengeSelectMap">
		select challenge_No,
		challenge_Title, TO_CHAR(challenge_Start_Date,'YYYYMMDD')
		challenge_Start_Date, TO_CHAR(challenge_End_Date,'YYYYMMDD')
		challenge_End_Date, member_No, challenge_Category, challenge_Likes,
		challenge_Sharing
		from challenge
	</select>

	<insert id="updateChallengeLog" parameterType="ChallengeLog">
		insert into
		Challenge_Log(challenge_no, challenge_log_content,day_count)
		values(#{challengeNo}, #{challengeLogContent}, #{dayCount})
	</insert>

	<select id="getChallengeByNo" parameterType="int" resultMap="challengeListMap">
		SELECT challenge.challenge_No, challenge_Title, TO_CHAR(challenge.challenge_Start_Date,'YYYYMMDD') challenge_Start_Date, TO_CHAR(challenge_End_Date,'YYYYMMDD') challenge_End_Date, 
		member_No, challenge_Category, challenge_Likes, challenge_Sharing, challenge_comment_no,challenge_reply_comment,challenge_comment_member_no,
		challenge_comment,challenge_comment_write_date, challenge_content,challenge_content_check, challenge_log_content, day_count
		from challenge
		LEFT OUTER JOIN challenge_log ON challenge.CHALLENGE_NO = challenge_log.CHALLENGE_NO
		LEFT OUTER JOIN challenge_content ON CHALLENGE.CHALLENGE_NO = challenge_content.CHALLENGE_NO
		LEFT OUTER JOIN challenge_comment ON challenge.CHALLENGE_NO = challenge_comment.CHALLENGE_NO
		where CHALLENGE.challenge_no=#{value}

	</select>

	<select id="searchChallengeList" parameterType="Challenge"
		resultMap="challengeSelectMap">
		select * from challenge
		<where>
			<if test="memberNo!=null">
				member_no = #{memberNo}
				<if test="challengeTitle!=null || challengeCategory!= null">and</if>
			</if>
			<if test="challengeTitle!=null">
				challenge_title=#{challengeTitle}
				<if test="challengeCategory!= null"> and</if>
			</if>
			<if test="challengeCategory!=null">
				challenge_category=#{challengeCategory}
			</if>
		</where>
	</select>

	<select id="getChallengeByMonth" parameterType="Daily" resultMap="challengeListMap">
        SELECT *
        FROM (
        SELECT 
        	challenge_No, challenge_Title, TO_CHAR(challenge_Start_Date,'YYYYMMDD') challenge_Start_Date, TO_CHAR(challenge_End_Date,'YYYYMMDD') challenge_End_Date, 
        	member_No, challenge_Category, challenge_Likes, challenge_Sharing, null as challenge_content, null as challenge_content_check
        FROM challenge
		WHERE (to_char(challenge_start_date,'yyyymm')=#{month} OR to_char(challenge_end_date,'yyyymm')=#{month}) AND member_no=#{memberNo}
		
		UNION
		
		SELECT 
        	challenge.challenge_No challenge_no, challenge_Title, TO_CHAR(challenge_Start_Date,'YYYYMMDD') challenge_Start_Date, TO_CHAR(challenge_End_Date,'YYYYMMDD') challenge_End_Date, 
        	member_No, challenge_Category, challenge_Likes, challenge_Sharing, challenge_content, challenge_content_check
        FROM challenge,challenge_content
		WHERE (to_char(challenge_start_date,'yyyymm')=#{month} OR to_char(challenge_end_date,'yyyymm')=#{month}) AND member_no=#{memberNo} AND challenge.challenge_no = challenge_content.challenge_no
		) 
		<!-- WHERE challenge_content_check IS NOT null -->
    </select>
    
    <select id="getChallengeByDay" parameterType="Daily" resultMap="challengeSelectMap">
        select * from challenge
		where (#{day} BETWEEN challenge_start_date AND challenge_end_date) AND member_no=#{memberNo}
    </select>
    
    <select id="getChallengeContentCheck" parameterType="ChallengeContent" resultType="String">
    	SELECT challenge_content_check
    	FROM challenge_content
    	WHERE challenge_no = #{challengeNo} AND challenge_content = #{challengeContent}
    </select>

</mapper>